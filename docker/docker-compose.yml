services:
  dx-clip-demo:
    container_name: dx-clip-demo-${UBUNTU_VERSION}
    image: dx-clip-demo:${UBUNTU_VERSION}
    build:
      context: ..
      dockerfile: docker/Dockerfile.dx-clip-demo
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
    ipc: host # NPU ipc
    pid: host # pid sharing for DX-RT Service
    tty: true # NPU
    stdin_open: true
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=${DISPLAY} # X11 forwarding
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR} # X11
      - XAUTHORITY=/tmp/.docker.xauth # X11
      - DOCKER_VOLUME_PATH=${DOCKER_VOLUME_PATH:-/deepx/workspace} # volume path
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix # X11
      - $HOME/.Xauthority:/root/.Xauthority # X11
      - $XAUTHORITY:$XAUTHORITY_TARGET # X11
      - /dev:/dev # NPU, Camera, GPU
      - /lib/udev/rules.d:/lib/udev/rules.d # auto detect device(USB CAM)
      - /lib/modules:/lib/modules # GPU
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/machine-id:/etc/machine-id:ro # NPU dbus
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket # NPU dbus
      - /run/dbus:/run/dbus # NPU dbus
      - /var/lib/dbus:/var/lib/dbus # NPU dbus
      - ${LOCAL_VOLUME_PATH:-../workspace}:${DOCKER_VOLUME_PATH:-/deepx/workspace} # mount volume
      - /var/run/docker.sock:/var/run/docker.sock # execute dx_com in dx-compiler container via docker CLI
    network_mode: "host"
    privileged: true # NPU
    restart: on-failure
    devices:
      - "/dev:/dev" # NPU / GPU / USB CAM
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep infinity"]
